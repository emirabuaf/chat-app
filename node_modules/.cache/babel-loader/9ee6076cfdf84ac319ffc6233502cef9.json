{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Desktop/chat-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Desktop/chat-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Desktop/chat-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Desktop/chat-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Desktop/chat-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Desktop/chat-app/src/components/ChatRoom.js\";\nimport React, { Component } from 'react';\nimport { Divider, Button, Responsive, Icon, Input, Segment } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport Message from './Message';\nimport '../styles/app.css';\nimport logo from '../slack-chat.jpg';\n\nvar ChatRoom =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatRoom, _Component);\n\n  function ChatRoom(props) {\n    var _this;\n\n    _classCallCheck(this, ChatRoom);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatRoom).call(this, props));\n\n    _this.handleSend = function () {\n      if (_this.state.message) {\n        var newItem = {\n          userName: _this.state.userName && _this.props.currentUser.displayName,\n          message: _this.state.message,\n          id: _this.props.currentUser.uid,\n          timeDetail: firebase.database.ServerValue.TIMESTAMP,\n          channel_id: _this.props.selectedChannel.id\n        };\n\n        _this.messageRef.child(_this.props.selectedChannel.id).push().set(newItem).then(function () {\n          _this.setState({\n            message: ''\n          });\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }\n    };\n\n    _this.listMessages = function (channels) {\n      return channels.map(function (messages) {\n        return Object.keys(messages).map(function (key) {\n          if (_this.props.selectedChannel.id === messages[key].channel_id) {\n            return React.createElement(Message, {\n              key: messages[key].timeDetail,\n              message: messages[key].message,\n              userName: messages[key].userName,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78\n              },\n              __self: this\n            });\n          }\n        });\n      });\n    };\n\n    _this.listUsers = function (channels) {\n      console.log(_this.state.users);\n      return channels.map(function (users) {\n        return Object.keys(users).map(function (key) {\n          if (_this.props.selectedChannel.id === users[key].channel_id) {\n            return React.createElement(\"div\", {\n              key: users[key].timeDetail,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93\n              },\n              __self: this\n            }, users[key].userName);\n          }\n        });\n      });\n    };\n\n    _this.state = {\n      userName: null,\n      message: '',\n      messages: [],\n      loadedmessages: [],\n      users: []\n    };\n    _this.messageRef = firebase.database().ref('messages');\n    return _this;\n  }\n\n  _createClass(ChatRoom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.listenMessages();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        userName: nextProps.currentUser\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        message: event.target.value\n      });\n    }\n  }, {\n    key: \"handleKeyPress\",\n    value: function handleKeyPress(event) {\n      if (event.key !== 'Enter') return;\n      this.handleSend();\n    }\n  }, {\n    key: \"listenMessages\",\n    value: function listenMessages() {\n      var _this2 = this;\n\n      var loadedmessages = [];\n      this.messageRef.on('value', function (snapshot) {\n        snapshot.forEach(function (snap) {\n          loadedmessages.push(snap.val());\n        });\n\n        _this2.setState({\n          loadedmessages: Object.values(snapshot.val())\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var loadedmessages = this.state.loadedmessages;\n      return React.createElement(Responsive, {\n        minWidth: 320,\n        maxWidth: 1969,\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: 1200,\n          marginTop: '30px',\n          marginLeft: '100px',\n          backgroundColor: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          height: 100,\n          width: 480,\n          marginLeft: 350,\n          marginTop: 60\n        },\n        src: logo,\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), this.listUsers(loadedmessages), React.createElement(\"p\", {\n        style: {\n          marginTop: '15px',\n          fontSize: '20px',\n          fontWeight: 'bold',\n          marginLeft: 550\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Bring your team into Slack\"), React.createElement(\"p\", {\n        style: {\n          marginTop: '15px',\n          fontSize: '20px',\n          marginLeft: 380\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Slack is better with teammates - Invite them to start collaborating\"), React.createElement(Button, {\n        style: {\n          marginTop: '5px',\n          marginLeft: 620\n        },\n        size: \"small\",\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Add People\"), React.createElement(Divider, {\n        style: {\n          width: 1200,\n          marginLeft: \"100px\"\n        },\n        section: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"chatroom\",\n        style: {\n          height: 300,\n          width: '90%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginBottom: 140\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, this.listMessages(loadedmessages))), React.createElement(\"div\", {\n        className: \"input-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Input, {\n        className: \"input-field\",\n        type: \"text\",\n        placeholder: \"type message\",\n        value: this.state.message,\n        onChange: this.handleChange.bind(this),\n        onKeyPress: this.handleKeyPress.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        ref: function ref(el) {\n          return _this3.bottomSpan = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        icon: \"send\",\n        className: \"send\",\n        onClick: this.handleSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ChatRoom;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.user.currentUser,\n    selectedChannel: state.channel.selectedChannel\n  };\n}\n\nexport default connect(mapStateToProps)(ChatRoom);","map":{"version":3,"sources":["/Users/mac/Desktop/chat-app/src/components/ChatRoom.js"],"names":["React","Component","Divider","Button","Responsive","Icon","Input","Segment","connect","firebase","Message","logo","ChatRoom","props","handleSend","state","message","newItem","userName","currentUser","displayName","id","uid","timeDetail","database","ServerValue","TIMESTAMP","channel_id","selectedChannel","messageRef","child","push","set","then","setState","catch","err","console","log","listMessages","channels","map","messages","Object","keys","key","listUsers","users","loadedmessages","ref","listenMessages","nextProps","event","target","value","on","snapshot","forEach","snap","val","values","width","marginTop","marginLeft","backgroundColor","height","fontSize","fontWeight","marginBottom","handleChange","bind","handleKeyPress","el","bottomSpan","mapStateToProps","user","channel"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAiBC,MAAjB,EAAwBC,UAAxB,EAAmCC,IAAnC,EAAwCC,KAAxC,EAA8CC,OAA9C,QAA6D,mBAA7D;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;IAGMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAyBnBC,UAzBmB,GAyBN,YAAM;AACjB,UAAI,MAAKC,KAAL,CAAWC,OAAf,EAAwB;AACtB,YAAIC,OAAO,GAAG;AACZC,UAAAA,QAAQ,EAAE,MAAKH,KAAL,CAAWG,QAAX,IAAuB,MAAKL,KAAL,CAAWM,WAAX,CAAuBC,WAD5C;AAEZJ,UAAAA,OAAO,EAAE,MAAKD,KAAL,CAAWC,OAFR;AAGZK,UAAAA,EAAE,EAAC,MAAKR,KAAL,CAAWM,WAAX,CAAuBG,GAHd;AAIZC,UAAAA,UAAU,EAACd,QAAQ,CAACe,QAAT,CAAkBC,WAAlB,CAA8BC,SAJ7B;AAKZC,UAAAA,UAAU,EAAC,MAAKd,KAAL,CAAWe,eAAX,CAA2BP;AAL1B,SAAd;;AAOA,cAAKQ,UAAL,CAAgBC,KAAhB,CAAsB,MAAKjB,KAAL,CAAWe,eAAX,CAA2BP,EAAjD,EAAqDU,IAArD,GAA4DC,GAA5D,CAAgEf,OAAhE,EACCgB,IADD,CACM,YAAM;AACV,gBAAKC,QAAL,CAAc;AAAClB,YAAAA,OAAO,EAAC;AAAT,WAAd;AACD,SAHD,EAICmB,KAJD,CAIO,UAAAC,GAAG,EAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,SAND;AAOD;AACF,KA1CkB;;AAAA,UA6DrBG,YA7DqB,GA6DN,UAAAC,QAAQ,EAAG;AACtB,aAAOA,QAAQ,CAACC,GAAT,CAAa,UAAAC,QAAQ,EAAI;AAC9B,eAAOC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBD,GAAtB,CAA0B,UAAAI,GAAG,EAAI;AACtC,cAAG,MAAKhC,KAAL,CAAWe,eAAX,CAA2BP,EAA3B,KAAkCqB,QAAQ,CAACG,GAAD,CAAR,CAAclB,UAAnD,EAA8D;AAC5D,mBAAO,oBAAC,OAAD;AACH,cAAA,GAAG,EAAEe,QAAQ,CAACG,GAAD,CAAR,CAActB,UADhB;AAEH,cAAA,OAAO,EAAEmB,QAAQ,CAACG,GAAD,CAAR,CAAc7B,OAFpB;AAGH,cAAA,QAAQ,EAAE0B,QAAQ,CAACG,GAAD,CAAR,CAAc3B,QAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAKD;AACF,SARM,CAAP;AASD,OAVM,CAAP;AAWD,KAzEkB;;AAAA,UA2EnB4B,SA3EmB,GA2EP,UAAAN,QAAQ,EAAI;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKvB,KAAL,CAAWgC,KAAvB;AACE,aAAOP,QAAQ,CAACC,GAAT,CAAa,UAAAM,KAAK,EAAI;AAC3B,eAAOJ,MAAM,CAACC,IAAP,CAAYG,KAAZ,EAAmBN,GAAnB,CAAuB,UAAAI,GAAG,EAAI;AACnC,cAAG,MAAKhC,KAAL,CAAWe,eAAX,CAA2BP,EAA3B,KAAkC0B,KAAK,CAACF,GAAD,CAAL,CAAWlB,UAAhD,EAA2D;AACzD,mBAAO;AACH,cAAA,GAAG,EAAGoB,KAAK,CAACF,GAAD,CAAL,CAAWtB,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAGJwB,KAAK,CAACF,GAAD,CAAL,CAAW3B,QAHP,CAAP;AAKD;AACF,SARM,CAAP;AASD,OAVM,CAAP;AAWD,KAxFgB;;AAEjB,UAAKH,KAAL,GAAa;AACXG,MAAAA,QAAQ,EAAE,IADC;AAEXF,MAAAA,OAAO,EAAE,EAFE;AAGX0B,MAAAA,QAAQ,EAAE,EAHC;AAIXM,MAAAA,cAAc,EAAC,EAJJ;AAKXD,MAAAA,KAAK,EAAC;AALK,KAAb;AAOA,UAAKlB,UAAL,GAAkBpB,QAAQ,CAACe,QAAT,GAAoByB,GAApB,CAAwB,UAAxB,CAAlB;AATiB;AAUlB;;;;wCACgB;AACjB,WAAKC,cAAL;AACD;;;8CAE2BC,S,EAAW;AACjC,WAAKjB,QAAL,CAAc;AAAChB,QAAAA,QAAQ,EAAEiC,SAAS,CAAChC;AAArB,OAAd;AACH;;;iCAEYiC,K,EAAO;AAClB,WAAKlB,QAAL,CAAc;AAAClB,QAAAA,OAAO,EAAEoC,KAAK,CAACC,MAAN,CAAaC;AAAvB,OAAd;AACD;;;mCAwBcF,K,EAAO;AACpB,UAAIA,KAAK,CAACP,GAAN,KAAc,OAAlB,EAA2B;AAC3B,WAAK/B,UAAL;AACD;;;qCAEgB;AAAA;;AACf,UAAIkC,cAAc,GAAC,EAAnB;AACA,WAAKnB,UAAL,CACG0B,EADH,CACM,OADN,EACc,UAAAC,QAAQ,EAAI;AACtBA,QAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAAC,IAAI,EAAI;AACvBV,UAAAA,cAAc,CAACjB,IAAf,CAAoB2B,IAAI,CAACC,GAAL,EAApB;AACD,SAFD;;AAGA,QAAA,MAAI,CAACzB,QAAL,CAAc;AAACc,UAAAA,cAAc,EAACL,MAAM,CAACiB,MAAP,CAAcJ,QAAQ,CAACG,GAAT,EAAd;AAAhB,SAAd;AACD,OANH;AAOH;;;6BA+BU;AAAA;;AAAA,UAEAX,cAFA,GAEiB,KAAKjC,KAFtB,CAEAiC,cAFA;AAGP,aACE,oBAAC,UAAD;AAAa,QAAA,QAAQ,EAAE,GAAvB;AAA4B,QAAA,QAAQ,EAAE,IAAtC;AAA4C,QAAA,SAAS,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAACa,UAAAA,KAAK,EAAC,IAAP;AAAYC,UAAAA,SAAS,EAAC,MAAtB;AAA6BC,UAAAA,UAAU,EAAC,OAAxC;AAAgDC,UAAAA,eAAe,EAAE;AAAjE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAC,GAAR;AAAYJ,UAAAA,KAAK,EAAC,GAAlB;AAAsBE,UAAAA,UAAU,EAAE,GAAlC;AAAsCD,UAAAA,SAAS,EAAC;AAAhD,SAAZ;AAAiE,QAAA,GAAG,EAAEnD,IAAtE;AAA4E,QAAA,GAAG,EAAC,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIK,KAAKmC,SAAL,CAAeE,cAAf,CAJL,EAKI;AAAG,QAAA,KAAK,EAAE;AAACc,UAAAA,SAAS,EAAC,MAAX;AAAkBI,UAAAA,QAAQ,EAAC,MAA3B;AAAkCC,UAAAA,UAAU,EAAC,MAA7C;AAAoDJ,UAAAA,UAAU,EAAC;AAA/D,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCALJ,EAMI;AAAG,QAAA,KAAK,EAAE;AAACD,UAAAA,SAAS,EAAC,MAAX;AAAkBI,UAAAA,QAAQ,EAAC,MAA3B;AAAkCH,UAAAA,UAAU,EAAC;AAA7C,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EANJ,EAOI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACD,UAAAA,SAAS,EAAC,KAAX;AAAiBC,UAAAA,UAAU,EAAC;AAA5B,SAAf;AAAiD,QAAA,IAAI,EAAC,OAAtD;AAA8D,QAAA,KAAK,EAAC,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,EAQE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAACF,UAAAA,KAAK,EAAC,IAAP;AAAYE,UAAAA,UAAU,EAAC;AAAvB,SAAhB;AAAkD,QAAA,OAAO,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,KAAK,EAAE;AAACE,UAAAA,MAAM,EAAC,GAAR;AAAaJ,UAAAA,KAAK,EAAC;AAAnB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAACO,UAAAA,YAAY,EAAE;AAAf,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,KAAK7B,YAAL,CAAkBS,cAAlB,CADC,CADF,CATF,EAcE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,cAHd;AAIE,QAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWC,OAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKqD,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CALZ;AAME,QAAA,UAAU,EAAE,KAAKC,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE;AAAM,QAAA,GAAG,EAAE,aAAAE,EAAE;AAAA,iBAAK,MAAI,CAACC,UAAL,GAAkBD,EAAvB;AAAA,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAWE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,SAAS,EAAC,MAA5B;AAAmC,QAAA,OAAO,EAAE,KAAK1D,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CAdF,CADF;AA6BE;;;;EA3HiBb,S;;AA8HnB,SAASyE,eAAT,CAAyB3D,KAAzB,EAA+B;AAC7B,SAAM;AACNI,IAAAA,WAAW,EAACJ,KAAK,CAAC4D,IAAN,CAAWxD,WADjB;AAENS,IAAAA,eAAe,EAACb,KAAK,CAAC6D,OAAN,CAAchD;AAFxB,GAAN;AAID;;AAGL,eAAepB,OAAO,CAACkE,eAAD,CAAP,CAAyB9D,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Divider,Button,Responsive,Icon,Input,Segment } from 'semantic-ui-react';\n\nimport { connect } from 'react-redux'\nimport firebase from 'firebase';\n\nimport Message from './Message';\nimport '../styles/app.css';\nimport logo from '../slack-chat.jpg';\n\n\nclass ChatRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: null,\n      message: '',\n      messages: [],\n      loadedmessages:[],\n      users:[]\n    };\n    this.messageRef = firebase.database().ref('messages')\n  }\ncomponentDidMount(){\n  this.listenMessages()\n}\n\n  componentWillReceiveProps(nextProps) {\n      this.setState({userName: nextProps.currentUser});\n  }\n\n  handleChange(event) {\n    this.setState({message: event.target.value});\n  }\n\n\n\n  handleSend = () => {\n    if (this.state.message) {\n      var newItem = {\n        userName: this.state.userName && this.props.currentUser.displayName,\n        message: this.state.message,\n        id:this.props.currentUser.uid,\n        timeDetail:firebase.database.ServerValue.TIMESTAMP,\n        channel_id:this.props.selectedChannel.id\n      }\n      this.messageRef.child(this.props.selectedChannel.id).push().set(newItem)\n      .then(() => {\n        this.setState({message:''})\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n  }\n\n\n  handleKeyPress(event) {\n    if (event.key !== 'Enter') return;\n    this.handleSend();\n  }\n\n  listenMessages() {\n    let loadedmessages=[]\n    this.messageRef\n      .on('value',snapshot => {\n        snapshot.forEach(snap => {\n          loadedmessages.push(snap.val())\n        })\n        this.setState({loadedmessages:Object.values(snapshot.val())})\n      })\n}\n\nlistMessages = channels =>{\n    return channels.map(messages => {\n      return Object.keys(messages).map(key => {\n        if(this.props.selectedChannel.id === messages[key].channel_id){\n          return <Message\n              key={messages[key].timeDetail}\n              message={messages[key].message}\n              userName={messages[key].userName}\n            />\n        }\n      })\n    })\n  }\n\n  listUsers = channels => {\n    console.log(this.state.users)\n      return channels.map(users => {\n        return Object.keys(users).map(key => {\n          if(this.props.selectedChannel.id === users[key].channel_id){\n            return <div\n                key= {users[key].timeDetail}\n              >\n              {users[key].userName}\n            </div>\n          }\n        })\n      })\n    }\n\n  render() {\n\n    const {loadedmessages} =this.state\n    return (\n      <Responsive  minWidth={320} maxWidth={1969} className=\"form\">\n        <div style={{width:1200,marginTop:'30px',marginLeft:'100px',backgroundColor: 'gray'}}>\n          <img style={{height:100,width:480,marginLeft: 350,marginTop:60}} src={logo} alt=\"Logo\" />\n        </div>\n          {this.listUsers(loadedmessages)}\n          <p style={{marginTop:'15px',fontSize:'20px',fontWeight:'bold',marginLeft:550}}>Bring your team into Slack</p>\n          <p style={{marginTop:'15px',fontSize:'20px',marginLeft:380}}>Slack is better with teammates - Invite them to start collaborating</p>\n          <Button style={{marginTop:'5px',marginLeft:620}} size=\"small\" color='green'>Add People</Button>\n        <Divider style={{width:1200,marginLeft:\"100px\"}}  section />\n        <div className=\"chatroom\" style={{height:300, width:'90%'}}>\n          <div style={{marginBottom: 140}}>\n        {this.listMessages(loadedmessages)}\n          </div>\n        </div>\n        <div className=\"input-button\">\n          <Input\n            className=\"input-field\"\n            type=\"text\"\n            placeholder=\"type message\"\n            value={this.state.message}\n            onChange={this.handleChange.bind(this)}\n            onKeyPress={this.handleKeyPress.bind(this)}\n          />\n          <span ref={el => (this.bottomSpan = el)} />\n\n          <Icon icon=\"send\" className=\"send\" onClick={this.handleSend} />\n    </div>\n    </Responsive>\n    )};\n  }\n\n    function mapStateToProps(state){\n      return{\n      currentUser:state.user.currentUser,\n      selectedChannel:state.channel.selectedChannel\n      }\n    }\n\n\nexport default connect(mapStateToProps)(ChatRoom);\n"]},"metadata":{},"sourceType":"module"}