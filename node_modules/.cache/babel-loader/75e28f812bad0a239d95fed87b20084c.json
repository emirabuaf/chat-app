{"ast":null,"code":"import _defineProperty from \"/Users/mac/Desktop/chat-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/mac/Desktop/chat-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/mac/Desktop/chat-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Desktop/chat-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Desktop/chat-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Desktop/chat-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Desktop/chat-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Desktop/chat-app/src/components/SideBar/UserPanel.js\";\nimport React, { Component } from 'react';\nimport { Label, Menu, Grid, Header, Icon, Dropdown, Modal, Form, Button, Input } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport { selectChannel } from '../../actions';\n\nvar UserPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserPanel, _Component);\n\n  function UserPanel(props) {\n    var _this;\n\n    _classCallCheck(this, UserPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserPanel).call(this, props));\n\n    _this.openModal = function () {\n      _this.setState({\n        modalIsOpen: true\n      });\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        modalIsOpen: false\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        channelName: '',\n        channels: _toConsumableArray(_this.state.channels).concat([_this.state.channelName])\n      });\n\n      _this.createChannel();\n\n      _this.closeModal();\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.createChannel = function (channel) {\n      var channelName = _this.state.channelName;\n\n      var key = _this.channelsRef.push().key;\n\n      if (_this.state.channelName) {\n        var newChannel = {\n          name: channelName,\n          id: key,\n          createdBy: {\n            name: _this.props.currentUser.displayName\n          }\n        };\n\n        _this.channelsRef.child(key).update(newChannel).then(function () {\n          _this.setState({\n            channelName: ''\n          });\n\n          _this.closeModal();\n\n          console.log(\"channel added\");\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }\n    };\n\n    _this.setFirstChannel = function () {\n      var firstChannel = _this.state.channels[0];\n\n      if (_this.state.firstLoad && _this.state.channels.length > 0) {\n        _this.props.selectChannel(firstChannel);\n\n        _this.setActiveChannel(firstChannel);\n      }\n\n      _this.setState({\n        firstLoad: false\n      });\n    };\n\n    _this.selectChannel = function (channel) {\n      _this.setActiveChannel(channel);\n\n      _this.props.selectChannel(channel);\n    };\n\n    _this.setActiveChannel = function (channel) {\n      _this.setState({\n        activeChannel: channel.id\n      });\n    };\n\n    _this.listChannels = function (channels) {\n      return channels.map(function (channel) {\n        return React.createElement(Menu.Item, {\n          key: channel.id,\n          onClick: function onClick() {\n            return _this.selectChannel(channel);\n          },\n          name: channel.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"# \", channel.name);\n      });\n    };\n\n    _this.renderChannelName = function () {\n      return _this.state.activeChannel && _this.props.selectedChannel.name;\n    };\n\n    _this.state = {\n      user: null,\n      modalIsOpen: false,\n      channels: [],\n      channelName: '',\n      firstLoad: true,\n      activeChannel: ''\n    };\n    _this.channelsRef = firebase.database().ref('channels');\n    return _this;\n  }\n\n  _createClass(UserPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.listenChannels();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        user: nextProps.currentUser\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeChannel();\n    }\n  }, {\n    key: \"listenChannels\",\n    value: function listenChannels() {\n      var _this2 = this;\n\n      var channels = [];\n      this.channelsRef.on('value', function (snapshot) {\n        snapshot.forEach(function (snap) {});\n\n        _this2.setState({\n          channels: Object.values(snapshot.val())\n        }, function () {\n          return _this2.setFirstChannel();\n        });\n      });\n    }\n  }, {\n    key: \"removeChannel\",\n    value: function removeChannel() {\n      this.channelsRef.off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var channels = this.state.channels;\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        style: {\n          padding: '1.2em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: \"20px\",\n          fontWeight: 'bold',\n          width: 90,\n          marginTop: \"-10px\",\n          marginLeft: \"210px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"#\", this.state.activeChannel && this.props.selectedChannel.name), React.createElement(Header, {\n        style: {\n          marginTop: \"-40px\"\n        },\n        inverted: true,\n        floated: \"left\",\n        as: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        trigger: React.createElement(\"span\", {\n          style: {\n            margin: \"20px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Chat-App\", React.createElement(\"div\", {\n          style: {\n            marginLeft: \"20px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(Label, {\n          circular: true,\n          color: \"green\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }), this.state.user && this.props.currentUser.displayName)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        onClick: this.props.signOut,\n        text: \"Sign Out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(Dropdown.Item, {\n        text: \"Settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }))))), React.createElement(Header, {\n        style: {\n          margin: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"CHANNELS(\", channels.length, \")\", React.createElement(Modal, {\n        style: {\n          width: \"600px\",\n          marginTop: \"180px\",\n          marginLeft: \"360px\",\n          height: \"40vh\"\n        },\n        open: this.state.modalIsOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Create a Channel\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Input, {\n        fluid: true,\n        style: {\n          marginTop: \"30px\"\n        },\n        name: \"channelName\",\n        placeholder: \"channel name\",\n        value: this.state.channelName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        style: {\n          marginTop: \"60px\",\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Create Channel\")))), this.listChannels(channels)), React.createElement(\"div\", {\n        style: {\n          marginLeft: \"20px\",\n          fontSize: \"15px\",\n          fontWeight: 'bold'\n        },\n        onClick: this.openModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Add Channels\", React.createElement(Icon, {\n        name: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return UserPanel;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.user.currentUser,\n    selectedChannel: state.channel.selectedChannel\n  };\n}\n\nexport default connect(mapStateToProps, {\n  selectChannel: selectChannel\n})(UserPanel);","map":{"version":3,"sources":["/Users/mac/Desktop/chat-app/src/components/SideBar/UserPanel.js"],"names":["React","Component","Label","Menu","Grid","Header","Icon","Dropdown","Modal","Form","Button","Input","connect","firebase","selectChannel","UserPanel","props","openModal","setState","modalIsOpen","closeModal","handleSubmit","event","preventDefault","channelName","channels","state","createChannel","handleChange","target","name","value","channel","key","channelsRef","push","newChannel","id","createdBy","currentUser","displayName","child","update","then","console","log","catch","err","setFirstChannel","firstChannel","firstLoad","length","setActiveChannel","activeChannel","listChannels","map","renderChannelName","selectedChannel","user","database","ref","listenChannels","nextProps","removeChannel","on","snapshot","forEach","snap","Object","values","val","off","padding","fontSize","fontWeight","width","marginTop","marginLeft","margin","signOut","height","float","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Label,Menu,Grid,Header,Icon,Dropdown,Modal,Form,Button,Input } from 'semantic-ui-react';\nimport { connect } from 'react-redux'\nimport firebase from 'firebase';\nimport {selectChannel} from '../../actions';\n\n\nclass UserPanel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user:null,\n      modalIsOpen:false,\n      channels:[],\n      channelName:'',\n      firstLoad:true,\n      activeChannel:'',\n    };\n    this.channelsRef = firebase.database().ref('channels');\n}\n\ncomponentDidMount(){\n  this.listenChannels();\n\n}\n\n  componentWillReceiveProps(nextProps){\n    this.setState({user:nextProps.currentUser})\n  }\n\n  componentWillUnmount(){\n    this.removeChannel()\n  }\n\n  openModal = () => {\n    this.setState({modalIsOpen:true})\n  }\n\n  closeModal = () => {\n    this.setState({modalIsOpen:false})\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({channelName:'',channels:[...this.state.channels,this.state.channelName]})\n    this.createChannel();\n    this.closeModal();\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]:event.target.value})\n  }\n\n\n\n  createChannel = (channel) => {\n    const{channelName} = this.state\n    const key = this.channelsRef.push().key;\n    if(this.state.channelName){\n      const newChannel = {\n        name:channelName,\n        id:key,\n        createdBy:{\n          name:this.props.currentUser.displayName\n        }\n      }\n      this.channelsRef.child(key).update(newChannel)\n      .then(() => {\n        this.setState({channelName:''});\n        this.closeModal();\n        console.log(\"channel added\")\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n  }\n\n\n  listenChannels() {\n  let channels=[]\n  this.channelsRef.on('value',snapshot => {\n    snapshot.forEach(snap => {\n    })\n    this.setState({channels:Object.values(snapshot.val())},() =>this.setFirstChannel())\n  })\n}\n\n  setFirstChannel = () => {\n    const firstChannel = this.state.channels[0]\n    if(this.state.firstLoad && this.state.channels.length > 0) {\n      this.props.selectChannel(firstChannel)\n      this.setActiveChannel(firstChannel)\n    }\n    this.setState({firstLoad:false})\n  }\n\n  selectChannel = (channel) => {\n    this.setActiveChannel(channel)\n    this.props.selectChannel(channel)\n  }\n\n  setActiveChannel = (channel) => {\n    this.setState({activeChannel: channel.id})\n  }\n\n  removeChannel(){\n    this.channelsRef.off()\n  }\n\n  listChannels = channels =>\n  channels.map(channel => (\n    <Menu.Item\n      key={channel.id}\n      onClick={() => this.selectChannel(channel)}\n      name={channel.name}\n    >\n      # {channel.name}\n    </Menu.Item>\n  ));\n\n  renderChannelName = () => {\n    return this.state.activeChannel && this.props.selectedChannel.name\n  }\n\n  render() {\n\n\n    const channels = this.state.channels\n    return (\n      <Grid>\n        <Grid.Column>\n          <Grid.Row style={{padding:'1.2em'}}>\n            <p style={{fontSize:\"20px\",fontWeight: 'bold',width:90,marginTop:\"-10px\",marginLeft: \"210px\"}}>#{this.state.activeChannel && this.props.selectedChannel.name}</p>\n            <Header\n              style={{marginTop:\"-40px\"}} inverted floated=\"left\" as=\"h4\">\n              <Dropdown trigger = {\n                <span\n                  style={{margin:\"20px\"}}>\n                  Chat-App<div style={{marginLeft: \"20px\"}}><Label circular color=\"green\" />{this.state.user && this.props.currentUser.displayName}</div></span>}>\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={this.props.signOut} text=\"Sign Out\"/>\n                <Dropdown.Item text=\"Settings\"/>\n              </Dropdown.Menu>\n              </Dropdown>\n            </Header>\n\n          </Grid.Row>\n          <Header style={{margin:'20px'}}>\n            CHANNELS({channels.length})\n            <Modal\n               style={{width:\"600px\",marginTop:\"180px\",marginLeft:\"360px\", height:\"40vh\"}}\n               open={this.state.modalIsOpen}\n               >\n              <Modal.Content>\n                <Header as=\"h1\" textAlign=\"center\">\n                  Create a Channel\n                </Header>\n                <Form onSubmit={this.handleSubmit}>\n                  <Input\n                  fluid\n                  style={{marginTop:\"30px\"}}\n                  name=\"channelName\"\n                  placeholder=\"channel name\"\n                  value={this.state.channelName}\n                  onChange={this.handleChange}\n                   />\n                 <Button onClick={this.handleSubmit}style={{marginTop:\"60px\",float:\"right\"}}>Create Channel</Button>\n                </Form>\n            </Modal.Content>\n            </Modal>\n          {this.listChannels(channels)}\n          </Header>\n          <div style={{marginLeft:\"20px\",fontSize:\"15px\",fontWeight: 'bold'}} onClick={this.openModal}>\n            Add Channels<Icon name=\"plus\"/>\n          </div>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  return{\n    currentUser:state.user.currentUser,\n    selectedChannel:state.channel.selectedChannel\n  }\n}\n\nexport default connect(mapStateToProps,{selectChannel})(UserPanel);\n"]},"metadata":{},"sourceType":"module"}