{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nimport createHistory from 'history/createBrowserHistory';\nimport { routerMiddleware } from 'react-router-redux';\nimport * as Actions from '../actions';\nexport var history = createHistory();\nexport function configureStore(initialState) {\n  var store = createStore(rootReducer, initialState, compose(applyMiddleware(reduxThunk, routerMiddleware(history)), window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : undefined));\n\n  if (module.hot) {\n    //enable webpack hot module replacement for combineReducers\n    module.hot.accept('../reducers', function () {\n      var nextRootReducer = require('../reducers').default;\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  store.dispatch(Actions.verifyAuth());\n  return store;\n}","map":{"version":3,"sources":["/Users/mac/Desktop/chat-app/src/store/configureStore.js"],"names":["createStore","compose","applyMiddleware","reduxThunk","rootReducer","createHistory","routerMiddleware","Actions","history","configureStore","initialState","store","window","__REDUX_DEVTOOLS_EXTENSION__","undefined","module","hot","accept","nextRootReducer","require","default","replaceReducer","dispatch","verifyAuth"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,aAAP,MAA2B,8BAA3B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AAGA,OAAO,IAAMC,OAAO,GAAEH,aAAa,EAA5B;AAGP,OAAO,SAASI,cAAT,CAAwBC,YAAxB,EAAsC;AAC3C,MAAMC,KAAK,GAAGX,WAAW,CACvBI,WADuB,EAEvBM,YAFuB,EAGvBT,OAAO,CACLC,eAAe,CAACC,UAAD,EAAYG,gBAAgB,CAACE,OAAD,CAA5B,CADV,EAELI,MAAM,CAACC,4BAAP,GAAsCD,MAAM,CAACC,4BAAP,EAAtC,GAA8EC,SAFzE,CAHgB,CAAzB;;AAQA,MAAIC,MAAM,CAACC,GAAX,EAAgB;AACd;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,aAAlB,EAAiC,YAAM;AACrC,UAAMC,eAAe,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBC,OAA/C;;AACAT,MAAAA,KAAK,CAACU,cAAN,CAAqBH,eAArB;AACD,KAHD;AAID;;AACCP,EAAAA,KAAK,CAACW,QAAN,CAAef,OAAO,CAACgB,UAAR,EAAf;AAEF,SAAOZ,KAAP;AACD","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from '../reducers'\nimport createHistory  from 'history/createBrowserHistory';\nimport { routerMiddleware } from 'react-router-redux'\nimport * as Actions from '../actions';\n\n\nexport const history= createHistory();\n\n\nexport function configureStore(initialState) {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(reduxThunk,routerMiddleware(history)),\n      window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : undefined\n    )\n  );\n  if (module.hot) {\n    //enable webpack hot module replacement for combineReducers\n    module.hot.accept('../reducers', () => {\n      const nextRootReducer = require('../reducers').default;\n      store.replaceReducer(nextRootReducer);\n    })\n  }\n    store.dispatch(Actions.verifyAuth());\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}