'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var OffCanvasBody = function OffCanvasBody(_ref) {
  var _ref$width = _ref.width;
  var width = _ref$width === undefined ? 250 : _ref$width;
  var _ref$transitionDurati = _ref.transitionDuration;
  var transitionDuration = _ref$transitionDurati === undefined ? 250 : _ref$transitionDurati;
  var _ref$isMenuOpened = _ref.isMenuOpened;
  var isMenuOpened = _ref$isMenuOpened === undefined ? false : _ref$isMenuOpened;
  var _ref$position = _ref.position;
  var position = _ref$position === undefined ? "left" : _ref$position;
  var children = _ref.children;
  var className = _ref.className;
  var style = _ref.style;


  // closed state style
  var translateX = position === 'left' ? 0 : 0;
  var closedStyle = {
    transitionDuration: transitionDuration + 'ms',
    transform: 'translate(' + translateX + 'px, 0px)',
    backfaceVisibility: 'hidden'
  };

  // open state style
  var translateOpenX = position === 'left' ? width : -1 * width;
  var openStyle = {
    transform: 'translate(' + translateOpenX + 'px, 0px)'
  };

  // create current state styles
  var currStyle = Object.assign({}, closedStyle);
  if (isMenuOpened) {
    currStyle = Object.assign({}, currStyle, openStyle);
  }

  return _react2.default.createElement(
    'div',
    { style: _extends({}, currStyle, style), className: className },
    children
  );
};

OffCanvasBody.propTypes = {
  width: _react.PropTypes.number,
  transitionDuration: _react.PropTypes.number,
  isMenuOpened: _react.PropTypes.bool,
  position: _react.PropTypes.oneOf(["left", "right"]),
  style: _react.PropTypes.object
};

exports.default = OffCanvasBody;