{"version":3,"sources":["actions/index.js","reducers/auth.js","reducers/user.js","reducers/channel.js","reducers/index.js","store/configureStore.js","components/Message.js","components/ChatRoom.js","components/SideBar/UserPanel.js","components/SideBar/SideBar.js","containers/Home.js","containers/Signup.js","containers/Login.js","components/LandingPage.js","containers/App.js","index.js"],"names":["AUTH_USER","SIGN_OUT_USER","SET_USER","CLEAR_USER","SELECT_CHANNEL","selectChannel","channel","type","payload","selectedChannel","clearUser","setUser","user","currentUser","signOutUser","dispatch","firebase","auth","signOut","then","verifyAuth","onAuthStateChanged","authUser","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initialState","authenticated","authError","rootReducer","combineReducers","state","arguments","length","undefined","Object","objectSpread","router","routerReducer","action","history","createHistory","Message","react_default","a","createElement","className","this","props","userName","message","Component","ChatRoom","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSend","newItem","displayName","id","uid","timeDetail","database","ServerValue","TIMESTAMP","channel_id","messageRef","child","push","set","setState","catch","err","console","log","listMessages","channels","map","messages","keys","key","Message_Message","loadedmessages","ref","listenMessages","nextProps","event","target","value","_this2","on","snapshot","forEach","snap","val","values","Responsive","minWidth","maxWidth","style","height","width","Input","placeholder","onChange","handleChange","bind","onKeyPress","handleKeyPress","Icon","icon","onClick","connect","UserPanel","openModal","modalIsOpen","closeModal","handleSubmit","preventDefault","channelName","toConsumableArray","concat","createChannel","defineProperty","name","channelsRef","newChannel","createdBy","update","setFirstChannel","firstChannel","firstLoad","setActiveChannel","activeChannel","listChannels","Menu","Item","listenChannels","removeChannel","off","Grid","Column","Row","padding","Header","inverted","floated","as","Content","margin","Dropdown","trigger","text","float","Modal","marginTop","marginLeft","open","textAlign","Form","onSubmit","fluid","Button","SideBar","background","size","fixed","vertical","SideBar_UserPanel","Home","handleSignOut","components_SideBar_SideBar","components_ChatRoom","Actions","Signup","createUserWithEmailAndPassword","email","password","newUser","updateProfile","username","saveUser","userRef","passwordConfirmation","error","_this$state","isInvalid","verticalAlign","Segment","disabled","Login","signInWithEmailAndPassword","signedInUser","authenticationError","LandingPage","Link","to","renderAuthLinks","React","PrivateRoute","_ref","component","objectWithoutProperties","Route","assign","render","Redirect","pathname","from","location","PublicRoute","_ref2","App","es","exact","path","App_PublicRoute","App_PrivateRoute","store","createStore","compose","applyMiddleware","reduxThunk","routerMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","ReactDOM","react_redux_es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.5c2db4a0.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth'; // This line is important\nimport 'firebase/database'; // This line is important\n\n\nexport const AUTH_USER = \"AUTH_USER\";\nexport const SIGN_OUT_USER = \"SIGN_OUT_USER\";\nexport const SET_USER = 'SET_USER';\nexport const CLEAR_USER = 'CLEAR_USER';\nexport const SELECT_CHANNEL = 'SELECT_CHANNEL';\n\nconst config = {\n  apiKey: \"AIzaSyCHQAfMk80sgGJygf02I6qIvyahvIZFPRA\",\n  authDomain: \"chat-app3-43770.firebaseapp.com\",\n  databaseURL: \"https://chat-app3-43770.firebaseio.com\",\n  projectId: \"chat-app3-43770\",\n  storageBucket: \"chat-app3-43770.appspot.com\",\n  messagingSenderId: \"760270788173\"\n};\nfirebase.initializeApp(config);\n\n\nexport function selectChannel(channel){\n  return{\n    type:SELECT_CHANNEL,\n    payload:{\n      selectedChannel:channel\n    }\n  }\n}\n\nexport function clearUser(){\n  return{\n    type:CLEAR_USER\n  }\n}\n\nexport function setUser(user) {\n  return{\n    type:SET_USER,\n    payload:{\n      currentUser:user\n    }\n  }\n}\n\n\n  export function signOutUser() {\n      return function (dispatch) {\n        firebase.auth().signOut()\n        .then(() =>{\n          dispatch({\n          type: SIGN_OUT_USER\n        })\n      });\n    }\n  }\n\nexport function verifyAuth() {\n    return function (dispatch) {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                dispatch(authUser());\n            } else {\n                dispatch(signOutUser());\n            }\n        });\n    }\n}\n\nexport function authUser(){\n  return{\n    type:AUTH_USER\n  }\n}\n","import {AUTH_USER,\n   SIGN_OUT_USER\n } from '../actions';\n\nconst initialState = {\n  authenticated:false,\n  authError:null\n}\n\nexport default function auth (state=initialState,action){\n  switch(action.type) {\n    case AUTH_USER:\n    return{\n      ...state,\n      authenticated:true,\n      authError:null\n    };\n    case SIGN_OUT_USER:\n    return{\n      ...state,\n       authenticated:false,\n       authError:null\n    };\n    default:\n      return state;\n  }\n}\n","import { SET_USER, CLEAR_USER } from '../actions';\n\nconst initialState ={\n  currentUser:null\n}\n\nexport default function user(state = initialState,action){\n  switch(action.type){\n    case SET_USER:\n    return{\n      currentUser:action.payload.currentUser\n    }\n    case CLEAR_USER:\n    return{\n      ...state\n    }\n    default:\n    return state;\n  }\n}\n","import {SELECT_CHANNEL} from '../actions';\n\n\nconst initialState = {\n  selectedChannel:null,\n}\n\nexport default function channel(state = initialState ,action){\n  switch (action.type) {\n    case SELECT_CHANNEL:\n    return{\n      ...state,\n      selectedChannel:action.payload.selectedChannel\n    }\n    default:\n    return state;\n}\n}\n","import { combineReducers } from 'redux';\nimport AuthReducer from './auth';\nimport { routerReducer } from 'react-router-redux';\nimport UserReducer  from './user';\nimport ChannelReducer from './channel';\n\n\nconst rootReducer = combineReducers({\n  auth:AuthReducer,\n  router:routerReducer,\n  user:UserReducer,\n  channel:ChannelReducer\n})\n\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from '../reducers'\nimport createHistory  from 'history/createBrowserHistory';\nimport { routerMiddleware } from 'react-router-redux'\nimport * as Actions from '../actions';\n\n\nexport const history= createHistory();\n\n\nexport function configureStore(initialState) {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(reduxThunk,routerMiddleware(history)),\n      window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : undefined\n    )\n  );\n  if (module.hot) {\n    //enable webpack hot module replacement for combineReducers\n    module.hot.accept('../reducers', () => {\n      const nextRootReducer = require('../reducers').default;\n      store.replaceReducer(nextRootReducer);\n    })\n  }\n    store.dispatch(Actions.verifyAuth());\n\n  return store;\n}\n","import React, {Component} from 'react';\n\nexport default class Message extends Component {\n  render() {\n    return (\n      <div className=\"message\" >\n        <div className=\"message__author\">\n          <strong>{this.props.userName}</strong>\n        </div>\n\n          {this.props.message}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Responsive,Icon,Input,Segment } from 'semantic-ui-react';\n\nimport { connect } from 'react-redux'\nimport firebase from 'firebase';\n\nimport Message from './Message';\nimport '../styles/app.css';\n\n\nclass ChatRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: null,\n      message: '',\n      messages: [],\n      loadedmessages:[]\n    };\n    this.messageRef = firebase.database().ref('messages');\n  }\ncomponentDidMount(){\n  this.listenMessages()\n}\n\n  componentWillReceiveProps(nextProps) {\n      this.setState({userName: nextProps.currentUser});\n  }\n\n  handleChange(event) {\n    this.setState({message: event.target.value});\n  }\n\n\n\n  handleSend = () => {\n    if (this.state.message) {\n      var newItem = {\n        userName: this.state.userName && this.props.currentUser.displayName,\n        message: this.state.message,\n        id:this.props.currentUser.uid,\n        timeDetail:firebase.database.ServerValue.TIMESTAMP,\n        channel_id:this.props.selectedChannel.id\n      }\n      this.messageRef.child(this.props.selectedChannel.id).push().set(newItem)\n      .then(() => {\n        this.setState({message:''})\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n  }\n\n\n  handleKeyPress(event) {\n    if (event.key !== 'Enter') return;\n    this.handleSend();\n  }\n\n  listenMessages() {\n    let loadedmessages=[]\n    this.messageRef\n      .on('value',snapshot => {\n        snapshot.forEach(snap => {\n          loadedmessages.push(snap.val())\n          console.log(loadedmessages)\n        })\n        this.setState({loadedmessages:Object.values(snapshot.val())})\n      })\n}\n\nlistMessages = channels =>{\n    return channels.map(messages => {\n      return Object.keys(messages).map(key => {\n        if(this.props.selectedChannel.id === messages[key].channel_id){\n          return <Message\n              key={messages[key].timeDetail}\n              message={messages[key].message}\n              userName={messages[key].userName}\n            />\n        }\n      })\n    })\n  }\n\n  render() {\n\n    const {loadedmessages} =this.state\n    return (\n      <Responsive  minWidth={320} maxWidth={1969} className=\"form\">\n        <div className=\"chatroom\" style={{height:300, width:'90%'}}>\n          {this.listMessages(loadedmessages)}\n        </div>\n        <div className=\"input-button\">\n          <Input\n            className=\"input-field\"\n            type=\"text\"\n            placeholder=\"type message\"\n            value={this.state.message}\n            onChange={this.handleChange.bind(this)}\n            onKeyPress={this.handleKeyPress.bind(this)}\n          />\n        <Icon icon=\"send\" className=\"send\" onClick={this.handleSend} />\n        </div>\n    </Responsive>\n    )};\n  }\n\n    function mapStateToProps(state){\n      return{\n      currentUser:state.user.currentUser,\n      selectedChannel:state.channel.selectedChannel\n      }\n    }\n\n\nexport default connect(mapStateToProps)(ChatRoom);\n","import React, { Component } from 'react';\nimport { Menu,Grid,Header,Icon,Dropdown,Modal,Form,Button,Input } from 'semantic-ui-react';\nimport { connect } from 'react-redux'\nimport firebase from 'firebase';\nimport {selectChannel} from '../../actions';\n\n\nclass UserPanel extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user:null,\n      modalIsOpen:false,\n      channels:[],\n      channelName:'',\n      firstLoad:true,\n      activeChannel:'',\n    };\n    this.channelsRef = firebase.database().ref('channels');\n}\n\ncomponentDidMount(){\n  this.listenChannels();\n\n}\n\n  componentWillReceiveProps(nextProps){\n    this.setState({user:nextProps.currentUser})\n  }\n\n  componentWillUnmount(){\n    this.removeChannel()\n  }\n\n  openModal = () => {\n    this.setState({modalIsOpen:true})\n  }\n\n  closeModal = () => {\n    this.setState({modalIsOpen:false})\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({channelName:'',channels:[...this.state.channels,this.state.channelName]})\n    this.createChannel();\n    this.closeModal();\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]:event.target.value})\n  }\n\n\n\n  createChannel = (channel) => {\n    const{channelName} = this.state\n    const key = this.channelsRef.push().key;\n    if(this.state.channelName){\n      const newChannel = {\n        name:channelName,\n        id:key,\n        createdBy:{\n          name:this.props.currentUser.displayName\n        }\n      }\n      this.channelsRef.child(key).update(newChannel)\n      .then(() => {\n        this.setState({channelName:''});\n        this.closeModal();\n        console.log(\"channel added\")\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n  }\n\n\n  listenChannels() {\n  let channels=[]\n  this.channelsRef.on('value',snapshot => {\n    snapshot.forEach(snap => {\n      console.log(channels)\n    })\n    this.setState({channels:Object.values(snapshot.val())},() =>this.setFirstChannel())\n  })\n}\n\n  setFirstChannel = () => {\n    const firstChannel = this.state.channels[0]\n    if(this.state.firstLoad && this.state.channels.length > 0) {\n      this.props.selectChannel(firstChannel)\n      this.setActiveChannel(firstChannel)\n    }\n    this.setState({firstLoad:false})\n  }\n\n  selectChannel = (channel) => {\n    this.setActiveChannel(channel)\n    this.props.selectChannel(channel)\n  }\n\n  setActiveChannel = (channel) => {\n    this.setState({activeChannel: channel.id})\n  }\n\n  removeChannel(){\n    this.channelsRef.off()\n  }\n\n  listChannels = channels =>\n  channels.map(channel => (\n    <Menu.Item\n      key={channel.id}\n      onClick={() => this.selectChannel(channel)}\n      name={channel.name}\n    >\n      # {channel.name}\n    </Menu.Item>\n  ));\n\n  render() {\n\n    const channels = this.state.channels\n    return (\n      <Grid>\n        <Grid.Column>\n          <Grid.Row style={{padding:'1.2em'}}>\n            <Header inverted floated=\"left\" as=\"h2\">\n              <Header.Content style={{margin:\"20px\"}}>Chat-App</Header.Content>\n            </Header>\n          </Grid.Row>\n          <Header style={{padding:'0.95em'}} as=\"h4\" inverted>\n            <Dropdown trigger = {\n              <span>{this.state.user && this.props.currentUser.displayName}</span>}>\n            <Dropdown.Menu>\n              <Dropdown.Item onClick={this.props.signOut} text=\"Sign Out\"/>\n              <Dropdown.Item text=\"Settings\"/>\n            </Dropdown.Menu>\n            </Dropdown>\n          </Header>\n          <Header style={{margin:'20px'}}>\n            CHANNELS({channels.length})\n            <Icon onClick={this.openModal}  style={{float:\"right\"}} name=\"plus\"/>\n            <Modal\n               style={{width:\"600px\",marginTop:\"180px\",marginLeft:\"360px\", height:\"40vh\"}}\n               open={this.state.modalIsOpen}\n               >\n              <Modal.Content>\n                <Header as=\"h1\" textAlign=\"center\">\n                  Create a Channel\n                </Header>\n                <Form onSubmit={this.handleSubmit}>\n                  <Input\n                  fluid\n                  style={{marginTop:\"30px\"}}\n                  name=\"channelName\"\n                  placeholder=\"channel name\"\n                  value={this.state.channelName}\n                  onChange={this.handleChange}\n                   />\n                 <Button onClick={this.handleSubmit}style={{marginTop:\"60px\",float:\"right\"}}>Create Channel</Button>\n                </Form>\n            </Modal.Content>\n            </Modal>\n          {this.listChannels(channels)}\n          </Header>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  return{\n    currentUser:state.user.currentUser\n  }\n}\n\nexport default connect(mapStateToProps,{selectChannel})(UserPanel);\n","import React, { Component } from 'react';\nimport UserPanel from './UserPanel';\nimport { Menu } from 'semantic-ui-react';\n\n\nclass SideBar extends Component {\n\n\n\n  render() {\n    return (\n      <Menu style={{background:'#4d394b'}}  size=\"small\" fixed=\"left\" vertical>\n        <UserPanel signOut={this.props.signOut} />\n      </Menu>\n    );\n  }\n\n}\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport * as Actions from '../actions';\nimport { connect } from 'react-redux';\nimport ChatRoom from '../components/ChatRoom';\nimport SideBar from '../components/SideBar/SideBar';\nimport firebase from 'firebase';\nimport 'firebase/auth';\n\nclass Home extends Component {\n\ncomponentDidMount() {\n  firebase.auth().onAuthStateChanged(user => {\n    if(user) {\n      this.props.setUser(user);\n    }else{\n      this.props.clearUser();\n    }\n  })\n};\n\n  handleSignOut = () =>{\n    this.props.signOutUser();\n  }\n\n  render() {\n    return (\n      <div>\n      <SideBar  signOut={this.handleSignOut} />\n      <ChatRoom />\n      </div>\n  );\n  }\n}\n\n\nexport default connect(null,Actions)(Home);\n","import React, {Component} from 'react';\nimport { Grid,Form,Segment,Button} from 'semantic-ui-react';\nimport firebase from 'firebase';\n\n\n\n\nclass Signup extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      error: null,\n    };\n    this.userRef = firebase.database().ref('users');\n  }\n\n\n  onChange = event => {\n    this.setState({[event.target.name]:event.target.value})\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    firebase.auth().createUserWithEmailAndPassword(this.state.email,this.state.password)\n    .then(newUser => {\n      console.log(newUser);\n      newUser.user.updateProfile({\n        displayName:this.state.username\n      })\n      .then(() => {\n        this.saveUser(newUser).then(() => {\n          console.log(\"user saved\")\n        })\n      })\n    })\n\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  saveUser = newUser => {\n    return this.userRef.child(newUser.user.uid).set({\n      name:newUser.user.displayName\n    })\n  }\n\n  render() {\n    const {username,password,email,passwordConfirmation} = this.state\n\n    const isInvalid = password !==passwordConfirmation ||\n    password === '' ||\n    email === '' ||\n    username ==='';\n\n    return (\n      <Grid style={{height:\"100vh\"}} textAlign=\"center\" verticalAlign=\"middle\" className=\"signup-form\">\n      <Grid.Column style={{maxWidth:450}}>\n        <Form size=\"large\" onSubmit={this.onSubmit}>\n          <Segment>\n            <Form.Input\n              name=\"username\"\n              placeholder=\"username\"\n              value={username}\n              onChange={this.onChange}/>\n              <Form.Input\n                name=\"email\"\n                placeholder=\"email\"\n                value={email}\n                onChange={this.onChange}/>\n              <Form.Input\n                name=\"password\"\n                placeholder=\"password\"\n                value={password}\n                type=\"password\"\n                onChange={this.onChange}/>\n              <Form.Input\n                name=\"passwordConfirmation\"\n                placeholder=\"password confirmation\"\n                value={passwordConfirmation}\n                type=\"password\"\n                onChange={this.onChange}/>\n              <Button disabled={isInvalid}>Sign Up</Button>\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n    );\n  }\n}\n\n\nexport default Signup;\n","import React, {Component} from 'react';\nimport { Grid,Form,Segment,Button} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport * as Actions from '../actions';\nimport firebase from 'firebase';\n\n\n\n\nclass Login extends Component {\n\n  state={\n  email:'',\n  password:''\n  }\n\n  onChange = event => {\n    this.setState({[event.target.name]:event.target.value})\n  }\n\n  onSubmit = values => {\n    firebase.auth().signInWithEmailAndPassword(this.state.email,this.state.password)\n    .then(signedInUser => {\n      console.log(signedInUser)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  render() {\n    const {password,email} = this.state\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <Grid style={{height:\"100vh\"}} textAlign=\"center\" verticalAlign=\"middle\" className=\"signup-form\">\n          <Grid.Column style={{maxWidth:450}}>\n            <Form size=\"large\" onSubmit={this.onSubmit}>\n              <Segment>\n                  <Form.Input\n                    name=\"email\"\n                    placeholder=\"email\"\n                    value={email}\n                    onChange={this.onChange}/>\n                  <Form.Input\n                    name=\"password\"\n                    placeholder=\"password\"\n                    value={password}\n                    type=\"password\"\n                    onChange={this.onChange}/>\n                  <Button disabled={isInvalid}>Login</Button>\n            </Segment>\n            </Form>\n          </Grid.Column>\n        </Grid>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    authenticationError: state.auth.authError\n  }\n}\n\nexport default connect(mapStateToProps, Actions)(Login);\n","import React from 'react';\n\nimport  { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as Actions from '../actions';\n\nclass LandingPage extends React.Component{\n\n renderAuthLinks() {\n    if (this.props.authenticated) {\n      return [\n        <li className=\"nav-item\" key={1}>\n          <Link className=\"nav-link\" to=\"/home\">Home</Link>\n        </li>,\n      ]\n    } else {\n      return [\n        <li className=\"nav-item\" key={1}>\n          <Link className=\"nav-link\" to=\"/login\">Login</Link>\n        </li>,\n        <li className=\"nav-item\" key={2}>\n          <Link className=\"nav-link\" to=\"/signup\">Sign Up</Link>\n        </li>\n      ]\n    }\n  }\n\n  render(){\n\n        return (\n          <nav className=\"navbar navbar-default\">\n            <div className=\"container-fluid\">\n               <ul className=\"nav navbar-nav navbar-right\">\n                 { this.renderAuthLinks() }\n               </ul>\n            </div>\n          </nav>\n        );\n      }\n    }\n\n    function mapStateToProps(state) {\n      return {\n        authenticated: state.auth.authenticated\n      }\n    }\n\n    export default connect(mapStateToProps, Actions)(LandingPage);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const LandingPage = ({authenticated}) => (\n//   <div>{authenticated ? <LandingAuth /> : <LandingNonAuth />}</div>\n// )\n//\n//\n// const LandingNonAuth = () => (\n//     <div>\n//       <Link to=\"/login\">Login</Link>\n//       <Link to=\"/signup\">Sign Up</Link>\n//     </div>\n//   );\n//\n// const LandingAuth = () => (\n//   <div>\n//     <Link to=\"/home\">home</Link>\n//   </div>\n// )\n//\n// function mapStateToProps(state){\n//   return{\n//     authenticated:state.auth.authenticated\n//   }\n// }\n//\n//\n// export default connect(mapStateToProps)(LandingPage);\n","import React from 'react';\nimport { ConnectedRouter } from 'react-router-redux';\nimport { Route, Redirect } from 'react-router-dom'\nimport { history } from './../store/configureStore';\nimport { connect } from 'react-redux';\n\nimport Home from './Home';\nimport Signup from './Signup';\nimport Login from './Login';\nimport LandingPage from '../components/LandingPage';\n\n\nconst PrivateRoute = ({component: Component, authenticated, ...props}) => {\n    return (\n        <Route\n            {...props}\n            render={(props) => authenticated === true\n                ? <Component {...props} />\n                : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n        />\n    );\n};\n\nconst PublicRoute = ({component: Component, authenticated, ...props}) => {\n    return (\n        <Route\n            {...props}\n            render={(props) => authenticated === false\n                ? <Component {...props} />\n              : <Redirect to='/home' />}\n        />\n    );\n};\n\n\nclass App extends React.Component {\n\n\n    render() {\n        return (\n            <ConnectedRouter history={history}>\n                <div>\n                    <div className=\"container\">\n                        <Route exact path=\"/\" component={ LandingPage }/>\n                        <PublicRoute authenticated={this.props.authenticated }  path=\"/signup\" component={ Signup } />\n                        <PublicRoute authenticated={this.props.authenticated }  path=\"/login\" component={ Login } />\n                        <PrivateRoute authenticated={this.props.authenticated }  path=\"/home\" component={ Home } />\n                    </div>\n                </div>\n            </ConnectedRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { authenticated: state.auth.authenticated };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './store/configureStore';\n\nconst store = configureStore();\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}